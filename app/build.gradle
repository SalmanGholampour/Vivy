apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.vivy.vivytask"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {

            buildConfigField "String", "BASE_URL", '"https://vivy.com/interviews/challenges/android/" '
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", '"https://vivy.com/interviews/challenges/android/" '

        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.recyclerview:recyclerview:$androidxRecyclerview"

   //Test
    testImplementation 'junit:junit:4.13'
    androidTestImplementation "androidx.test:runner:$rootProject.androidxRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
    testImplementation "org.mockito:mockito-inline:$rootProject.mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockitoKotlinVersion"
    testImplementation "android.arch.core:core-testing:$rootProject.coreTesting"
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$rootProject.powerMockRuleVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$rootProject.powerMockApiVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$rootProject.powerMockClassLoadingVersion"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // font
    implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // view model
    implementation "android.arch.lifecycle:extensions:$rootProject.lifecycle"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpInterceptor"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"

    //Picasso
    implementation "com.squareup.picasso:picasso:$picasso"



}
